{"ast":null,"code":"import axios from 'axios';\nimport config from '../config';\nimport { REQUEST_UNRECORNIZED, REQUEST_FORBIDDEN } from '@/constant/status'; // create an axios instance\n\nconst api = axios.create({\n  baseURL: config.baseURL\n});\napi.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'; // request interceptor\n\napi.interceptors.request.use(config => {\n  return config;\n}, err => {\n  return Promise.reject(err);\n}); // response interceptor\n\napi.interceptors.response.use(res => {\n  console.log(res.status);\n\n  if (res.status === 200) {\n    return res.data;\n  } else {\n    return res;\n  }\n}, err => {\n  console.log(err);\n  console.log(err.response);\n\n  if (!err.response) {\n    return Promise.reject(err);\n  }\n\n  switch (err.response.status) {\n    case REQUEST_UNRECORNIZED:\n      break;\n\n    case REQUEST_FORBIDDEN:\n      console.log('No Permission');\n      break;\n\n    default:\n      break;\n  }\n\n  return Promise.reject(err.response);\n});\nexport default api;","map":{"version":3,"sources":["/Users/louisliu/code/lottery/client/src/api/http.js"],"names":["axios","config","REQUEST_UNRECORNIZED","REQUEST_FORBIDDEN","api","create","baseURL","defaults","headers","post","interceptors","request","use","err","Promise","reject","response","res","console","log","status","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SACEC,oBADF,EAEEC,iBAFF,QAGO,mBAHP,C,CAKA;;AACA,MAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAEL,MAAM,CAACK;AADO,CAAb,CAAZ;AAIAF,GAAG,CAACG,QAAJ,CAAaC,OAAb,CAAqBC,IAArB,CAA0B,cAA1B,IAA4C,mCAA5C,C,CAEA;;AACAL,GAAG,CAACM,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CACEX,MAAM,IAAI;AACR,SAAOA,MAAP;AACD,CAHH,EAIEY,GAAG,IAAI;AACL,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CANH,E,CASA;;AACAT,GAAG,CAACM,YAAJ,CAAiBM,QAAjB,CAA0BJ,GAA1B,CACEK,GAAG,IAAI;AACLC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAhB;;AACA,MAAIH,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACtB,WAAOH,GAAG,CAACI,IAAX;AACD,GAFD,MAEO;AACL,WAAOJ,GAAP;AACD;AACF,CARH,EASEJ,GAAG,IAAI;AACLK,EAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACG,QAAhB;;AACA,MAAI,CAACH,GAAG,CAACG,QAAT,EAAmB;AACjB,WAAOF,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD;;AACD,UAAQA,GAAG,CAACG,QAAJ,CAAaI,MAArB;AACE,SAAKlB,oBAAL;AACE;;AACF,SAAKC,iBAAL;AACEe,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA;;AACF;AACE;AAPJ;;AASA,SAAOL,OAAO,CAACC,MAAR,CAAeF,GAAG,CAACG,QAAnB,CAAP;AACD,CAzBH;AA4BA,eAAeZ,GAAf","sourcesContent":["import axios from 'axios'\nimport config from '../config'\nimport {\n  REQUEST_UNRECORNIZED,\n  REQUEST_FORBIDDEN\n} from '@/constant/status'\n\n// create an axios instance\nconst api = axios.create({\n  baseURL: config.baseURL\n})\n\napi.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'\n\n// request interceptor\napi.interceptors.request.use(\n  config => {\n    return config\n  },\n  err => {\n    return Promise.reject(err)\n  }\n)\n\n// response interceptor\napi.interceptors.response.use(\n  res => {\n    console.log(res.status)\n    if (res.status === 200) {\n      return res.data\n    } else {\n      return res\n    }\n  },\n  err => {\n    console.log(err)\n    console.log(err.response)\n    if (!err.response) {\n      return Promise.reject(err)\n    }\n    switch (err.response.status) {\n      case REQUEST_UNRECORNIZED:\n        break\n      case REQUEST_FORBIDDEN:\n        console.log('No Permission')\n        break\n      default:\n        break\n    }\n    return Promise.reject(err.response)\n  }\n)\n\nexport default api"]},"metadata":{},"sourceType":"module"}