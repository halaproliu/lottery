{"ast":null,"code":"/**\n * @description 背景星星生成\n * @param el canvas dom节点\n */\nclass Stars {\n  constructor(el) {\n    this.element = el;\n    this.starNums = 1500;\n    this.radius = `0.${Math.floor(Math.random() * 9) + 1}`;\n    this.wrap = 0;\n    this.animate = true;\n    this.stars = [];\n  }\n\n  init() {\n    if (!this.element) return;\n    this.ctx = this.element.getContext('2d');\n    this.focalLength = this.element.width * 2;\n\n    for (let i = 0; i < this.starNums; i++) {\n      this.stars.push({\n        x: Math.random() * this.element.width,\n        y: Math.random() * this.element.height,\n        z: Math.random() * this.element.width,\n        o: '0.' + Math.floor(Math.random() * 99) + 1\n      });\n    }\n\n    this.execute();\n  }\n\n  moveStars() {\n    for (let i = 0; i < this.starNums; i++) {\n      let star = this.stars[i];\n      star.z--;\n\n      if (star.z <= 0) {\n        star.z = this.element.width;\n      }\n    }\n  }\n\n  drawStars() {\n    if (this.element.width !== window.innerWidth || this.element.width !== window.innerWidth) {\n      this.element.width = window.innerWidth;\n      this.element.height = window.innerHeight;\n      this.init();\n    }\n\n    if (this.wrap === 0) {\n      this.ctx.fillStyle = 'rgba(0, 10, 20, 1)';\n      this.ctx.fillRect(0, 0, this.element.width, this.element.height);\n    }\n\n    this.ctx.fillStyle = `rgba(209, 255, 255, ${this.radius})`;\n    let centerX = this.element.width / 2;\n    let centerY = this.element.height / 2;\n\n    for (let i = 0; i < this.starNums; i++) {\n      let star = this.stars[i];\n      let pixelX = (star.x - centerX) * (this.focalLength / star.z);\n      pixelX += centerX;\n      let pixelY = (star.y - centerY) * (this.focalLength / star.z);\n      pixelY += centerY;\n      let pixelRadius = 1 * (this.focalLength / star.z);\n      this.ctx.fillRect(pixelX, pixelY, pixelRadius, pixelRadius);\n      this.ctx.fillStyle = `rgba(209, 255, 255, ${star.o})`;\n    }\n  }\n\n  execute() {\n    if (this.animate) {\n      window.requestAnimationFrame(() => {\n        this.execute();\n      });\n      this.moveStars();\n      this.drawStars();\n    }\n  }\n\n}\n\nexport default Stars;","map":{"version":3,"sources":["/Users/louisliu/code/lottery/client/src/libs/stars.js"],"names":["Stars","constructor","el","element","starNums","radius","Math","floor","random","wrap","animate","stars","init","ctx","getContext","focalLength","width","i","push","x","y","height","z","o","execute","moveStars","star","drawStars","window","innerWidth","innerHeight","fillStyle","fillRect","centerX","centerY","pixelX","pixelY","pixelRadius","requestAnimationFrame"],"mappings":"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","sourcesContent":["/**\n * @description 背景星星生成\n * @param el canvas dom节点\n */\nclass Stars {\n  constructor (el) {\n    this.element = el\n    this.starNums = 1500\n    this.radius = `0.${Math.floor(Math.random() * 9) + 1}`\n    this.wrap = 0\n    this.animate = true\n    this.stars = []\n  }\n\n  init () {\n    if (!this.element) return\n    this.ctx = this.element.getContext('2d')\n    this.focalLength = this.element.width * 2\n    for (let i = 0; i < this.starNums; i++) {\n      this.stars.push({\n        x: Math.random() * this.element.width,\n        y: Math.random() * this.element.height,\n        z: Math.random() * this.element.width,\n        o: '0.' + Math.floor(Math.random() * 99) + 1\n      })\n    }\n    this.execute()\n  }\n\n  moveStars () {\n    for (let i = 0; i < this.starNums; i++) {\n      let star = this.stars[i]\n      star.z--\n      if (star.z <= 0) {\n        star.z = this.element.width\n      }\n    }\n  }\n\n  drawStars () {\n    if (this.element.width !== window.innerWidth || this.element.width !== window.innerWidth) {\n      this.element.width = window.innerWidth\n      this.element.height = window.innerHeight\n      this.init()\n    }\n\n    if (this.wrap === 0) {\n      this.ctx.fillStyle = 'rgba(0, 10, 20, 1)'\n      this.ctx.fillRect(0, 0, this.element.width, this.element.height)\n    }\n    this.ctx.fillStyle = `rgba(209, 255, 255, ${this.radius})`\n    let centerX = this.element.width / 2\n    let centerY = this.element.height / 2\n    for (let i = 0; i < this.starNums; i++) {\n      let star = this.stars[i]\n      let pixelX = (star.x - centerX) * (this.focalLength / star.z)\n      pixelX += centerX\n      let pixelY = (star.y - centerY) * (this.focalLength / star.z)\n      pixelY += centerY\n      let pixelRadius = 1 * (this.focalLength / star.z)\n      this.ctx.fillRect(pixelX, pixelY, pixelRadius, pixelRadius)\n      this.ctx.fillStyle = `rgba(209, 255, 255, ${star.o})`\n    }\n  }\n\n  execute () {\n    if (this.animate) {\n      window.requestAnimationFrame(() => {\n        this.execute()\n      })\n      this.moveStars()\n      this.drawStars()\n    }\n  }\n}\n\nexport default Stars"]},"metadata":{},"sourceType":"module"}