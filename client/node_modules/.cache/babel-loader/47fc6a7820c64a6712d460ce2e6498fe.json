{"ast":null,"code":"class Stars {\n  constructor(el) {\n    this.element = el;\n    this.starNums = 1500;\n    this.radius = `0.${Math.floor(Math.random() * 9) + 1}`;\n    this.wrap = 0;\n    this.animate = true;\n    this.stars = [];\n    this.init();\n    this.execute();\n  }\n\n  init() {\n    if (!this.element) return;\n    this.ctx = this.element.getContext('2d');\n    this.focalLength = this.element.width * 2;\n\n    for (let i = 0; i < this.starNums; i++) {\n      this.stars.push({\n        x: Math.random() * this.element.width,\n        y: Math.random() * this.element.height,\n        z: Math.random() * this.element.width,\n        o: '0.' + Math.floor(Math.random() * 99) + 1\n      });\n    }\n  }\n\n  moveStars() {\n    for (let i = 0; i < this.starNums; i++) {\n      let star = this.stars[i];\n      star.z--;\n\n      if (star.z <= 0) {\n        star.z = this.element.width;\n      }\n    }\n  }\n\n  drawStars() {\n    if (this.element.width !== window.innerWidth || this.element.width !== window.innerWidth) {\n      this.element.width = window.innerWidth;\n      this.element.height = window.innerHeight;\n      this.init();\n    }\n\n    if (this.wrap === 0) {\n      this.ctx.fillStyle = 'rgba(0, 10, 20, 1)';\n      this.fillRect(0, 0, this.element.width, this.element.height);\n    }\n\n    this.ctx.fillStyle = `rgba(209, 255, 255, ${this.radius})`;\n    let centerX = this.element.width / 2;\n    let centerY = this.element.height / 2;\n\n    for (let i = 0; i < this.starNums; i++) {\n      let star = this.stars[i];\n      let pixelX = (star.x - centerX) * (this.focalLength / star.z);\n      pixelX += centerX;\n      let pixelY = (star.y - centerY) * (this.focalLength / star.z);\n      pixelY += centerY;\n      let pixelRadius = 1 * (this.focalLength / star.z);\n      this.ctx.fillRect(pixelX, pixelY, pixelRadius, pixelRadius);\n      this.fillStyle = `rgba(209, 255, 255, ${star.o})`;\n    }\n  }\n\n  execute() {\n    if (this.animate) {\n      window.requestAnimationFrame(this.execute);\n      this.moveStars();\n      this.drawStars();\n    }\n  }\n\n}\n\nexport default Stars;","map":{"version":3,"sources":["/Users/louisliu/code/lottery/client/src/libs/stars.js"],"names":["Stars","constructor","el","element","starNums","radius","Math","floor","random","wrap","animate","stars","init","execute","ctx","getContext","focalLength","width","i","push","x","y","height","z","o","moveStars","star","drawStars","window","innerWidth","innerHeight","fillStyle","fillRect","centerX","centerY","pixelX","pixelY","pixelRadius","requestAnimationFrame"],"mappings":"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","sourcesContent":["class Stars {\n  constructor (el) {\n    this.element = el\n    this.starNums = 1500\n    this.radius = `0.${Math.floor(Math.random() * 9) + 1}`\n    this.wrap = 0\n    this.animate = true\n    this.stars = []\n    this.init()\n    this.execute()\n  }\n\n  init () {\n    if (!this.element) return\n    this.ctx = this.element.getContext('2d')\n    this.focalLength = this.element.width * 2\n    for (let i = 0; i < this.starNums; i++) {\n      this.stars.push({\n        x: Math.random() * this.element.width,\n        y: Math.random() * this.element.height,\n        z: Math.random() * this.element.width,\n        o: '0.' + Math.floor(Math.random() * 99) + 1\n      })\n    }\n  }\n\n  moveStars () {\n    for (let i = 0; i < this.starNums; i++) {\n      let star = this.stars[i]\n      star.z--\n      if (star.z <= 0) {\n        star.z = this.element.width\n      }\n    }\n  }\n\n  drawStars () {\n    if (this.element.width !== window.innerWidth || this.element.width !== window.innerWidth) {\n      this.element.width = window.innerWidth\n      this.element.height = window.innerHeight\n      this.init()\n    }\n\n    if (this.wrap === 0) {\n      this.ctx.fillStyle = 'rgba(0, 10, 20, 1)'\n      this.fillRect(0, 0, this.element.width, this.element.height)\n    }\n    this.ctx.fillStyle = `rgba(209, 255, 255, ${this.radius})`\n    let centerX = this.element.width / 2\n    let centerY = this.element.height / 2\n    for (let i = 0; i < this.starNums; i++) {\n      let star = this.stars[i]\n      let pixelX = (star.x - centerX) * (this.focalLength / star.z)\n      pixelX += centerX\n      let pixelY = (star.y - centerY) * (this.focalLength / star.z)\n      pixelY += centerY\n      let pixelRadius = 1 * (this.focalLength / star.z)\n      this.ctx.fillRect(pixelX, pixelY, pixelRadius, pixelRadius)\n      this.fillStyle = `rgba(209, 255, 255, ${star.o})`\n    }\n  }\n\n  execute () {\n    if (this.animate) {\n      window.requestAnimationFrame(this.execute)\n      this.moveStars()\n      this.drawStars()\n    }\n  }\n}\n\nexport default Stars"]},"metadata":{},"sourceType":"module"}